#!/bin/bash
set -e

# This fetches the raw HTML for a book (or all books if using the --all argument) from ${hostName}

arg1=$1

# Pull in the BOOK_CONFIGS
source ./books.txt || exit 1


# Check command line args

if [ -z "${arg1}" ]
then
  >&2 echo 'ERROR: Argument Missing. You must specify the name of the book as the 1st argument or --all for all books. For example: physics'
  >&2 echo ''
  >&2 echo "Valid books are (from ./books.txt):"
  for bookConfig in "${BOOK_CONFIGS[@]}"
  do
    read -r bookName rulesetName uuid _ <<< "${bookConfig}"
    >&2 echo "${bookName}"
  done
  exit 1
fi

if [ ! "${arg1}" == "--all" ]
then
  # Filter BOOK_CONFIGS to only contain the book you want to fetch
  for bookConfig in "${BOOK_CONFIGS[@]}"
  do
    read -r bookConfigName rulesetName uuid hostName _ <<< "${bookConfig}"

    if [[ "${arg1}" = "${bookConfigName}" ]]
    then
      BOOK_CONFIGS=("${bookConfigName} ${rulesetName} ${uuid} ${hostName} ${_}")
      hostName=${HOST:-${hostName}}

      foundConfig=1
      break
    fi
  done

  if [[ ! 1 -eq "${foundConfig}" ]]
  then
    >&2 echo "ERROR: Could not find Book info for book named ${arg1}"
    >&2 echo "Valid books are (from ./books.txt):"
    for bookConfig in "${BOOK_CONFIGS[@]}"
    do
      read -r bookName rulesetName uuid _ <<< "${bookConfig}"
      >&2 echo "${bookName}"
    done
    exit 1
  fi
fi

for bookConfig in "${BOOK_CONFIGS[@]}"
do
  read -r bookName rulesetName uuid hostName _ <<< "${bookConfig}"
  # Allow user to override the hostname
  hostName=${HOST:-${hostName}}

  rawFile="./data/${bookName}-raw.xhtml"

  >&2 echo "==> Fetching ${bookName} from ${hostName}"
  >&2 echo "generating an EPUB from the database and converting to a single HTML file"
  >&2 echo "(may take a up to 20 minutes if you are getting a book with exercises that need to be converted)..."

  tempEpubFile="~/temp.internal.epub"
  tempHtmlFile="~/temp.xhtml"

  rmTempEpubCmd="[ -e ${tempEpubFile} ] && rm ${tempEpubFile}"
  rmTempHtmlCmd="[ -e ${tempHtmlFile} ] && rm ${tempHtmlFile}"
  generateEpubCmd="/var/cnx/venvs/publishing/bin/cnx-archive-export_epub /etc/cnx/publishing/app.ini ${uuid} ${tempEpubFile}"
  generateHtmlCmd="/var/cnx/venvs/publishing/bin/cnx-epub-single_html --exercise_host exercises.openstax.org --mathmlcloud_url http://mathmlcloud.cnx.org:1337/equation/ ${tempEpubFile} > ${tempHtmlFile}"

  commands="${rmTempEpubCmd}; ${rmTempHtmlCmd}; ${generateEpubCmd} && ${generateHtmlCmd}"

  ssh ${USER}@${hostName} ${commands}

  >&2 echo "==> Copying HTML file from server to local machine"
  scp ${USER}@${hostName}:${tempHtmlFile} ${rawFile}

  >&2 echo "Fetch is Done. File is available at ${rawFile}"

done
