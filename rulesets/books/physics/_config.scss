/*==========================================================
  PHYSICS PAGES
==========================================================*/
$sectionSummaryClass: "section-summary";
//Make pages
$pageKeyTerms               : ( name: "Glossary", source: "glossary", isGlossary: true, sortBy: "dl > dt" );

/*
  Section Review

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.summary.xhtml-baked.xhtml

  Style guide: book.2-composite.summary
*/
$pageChapterReview          : ( name: "Section Review", source: "#{$sectionSummaryClass}", sectionSeparated: true );

/*
  Conceptual Questions

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.conceptual.xhtml-baked.xhtml

  Style guide: book.2-composite.conceptual
*/
$pageConceptualQuestions: ( name: "Conceptual Questions", source: "conceptual-questions", sectionSeparated: true );

/*
  Problems and Exercises

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.problems.xhtml-baked.xhtml

  Style guide: book.2-composite.problems
*/
$pageProblems               : ( name: "Problems & Exercises", source: "problems-exercises", sectionSeparated: true );

$pageIndex                  : ( name: "Index", source: "index", isIndex: true );

$chapterCompositePages      : (
  $pageKeyTerms, $pageChapterReview, $pageConceptualQuestions, $pageProblems
);

$bookCompositePages: (
  //This doesn't get parsed as a list without a comma at the end
  //the composite builder should account for this rather than using hacky syntax
  $pageIndex,
);

/*==========================================================
  PHYSICS TITLING CONTENT
==========================================================*/



//unfortunately a base obj cannot be created for all Content because it would make the order of the keys static
//when they need to be able to be in any order because of possible changes in titling order between books
//Usage Note: key: class of the containing span, value: text that will go inside span
$chapterTitleContent        : ( number: counter(chapter), );

$appendixTitleContent       : ( title-label: "Appendix ", number: counter(appendix, upper-alpha), );

$sectionTitleContent        : ( number: counter(chapter) "." counter(section), );

$exerciseTitleContent       : ( number: counter(exercise) );

// NOTE: This is unused in this book but is copy/pasta'd just to make it easier to find when switching to a config scheme
$exerciseContentTitleContent: ( number : counter(exerciseMaybeInContent), title-label : "Exercise" );
$solutionContentTitleContent: null;

$exampleTitleContent        : ( title-label: "Example ", number: counter(chapter) "." counter(example) );

$exampleSolutionTitleContent: ( title-label: "Solution ", number: counter(chapter) "." counter(example) );

$equationNumber             : ( number: counter(chapter) "." counter(equation) );

$objectivesTitleContent     : "Chapter Outline";

$captionTableNumber         : ( title-label: "Table ", number: counter(chapter) "." counter(table) );//TODO: Make a counter for both chapter and appendix, and automate the switch between standard and upper alpha counting?
$captionTableNumberAp       : ( title-label: "Table ", number: counter(appendix, upper-alpha) "." counter(table) );

$captionFigNumber           : ( title-label: "Figure ", number: counter(chapter) "." counter(figure) );

//TODO: Make a counter for both chapter and appendix, and automate the switch between standard and upper alpha counting?
$captionFigNumberAp         : ( title-label: "Figure ", number: counter(appendix, upper-alpha) "." counter(figure) );
$symbolsSectionTitle: "Symbols";

/*==========================================================
  PHYSICS CONFIG
==========================================================*/

$setTableCaption            : ( type: table, defaultContainer: caption, hasCaption: false, hasTitle: true );

$setFigureCaption           : ( type: figure, defaultContainer: figcaption, hasCaption: true, hasTitle: false );


//If this method of setting the content of the label explicity becomes a problem,
//try grabbing the numbering information from the element's header

//NOTE: These selectors MUST match the counting selectors or be more specific
//otherwise, the increment and the counter() call may fire in the wrong order
//This may be fixed in a later version of easybake
$targetLabels: (
  (
    selector    : '.os-eoc [data-type="exercise"]',
    label       : "Exercise " counter(chapter) "." counter(exercise)
  ),
  (
    selector    : 'div[data-type="chapter"] .example',
    label       : "Example " counter(chapter) "." counter(example)
  ),

  (
    selector    : '[data-type="chapter"] :not(table) > table:not(.unnumbered)',
    label:        "Table " counter(chapter) "." counter(table)
  ),
  (
    selector    : '[data-type="chapter"] :not(figure) > figure:not(.unnumbered)',
    label       : "Figure " counter(chapter) "." counter(figure)
  ),
  (
    selector    : '[data-type="appendix"] :not(table) > table:not(.unnumbered)',
    label       : "Table " counter(appendix, upper-alpha) "." counter(table)
  ),
  (
    selector    : '[data-type="appendix"] :not(figure) > figure:not(.unnumbered)',
    label       : "Figure " counter(appendix, upper-alpha) "." counter(figure)
  )
);

/*
  Chapter Objectives

  This is a Note that appears in the Introduction page of every chapter.

  Markup: ./styleguide/page.note.chapter-objectives.xhtml-baked.xhtml

  Style guide: page.note.chapter-objectives
*/
