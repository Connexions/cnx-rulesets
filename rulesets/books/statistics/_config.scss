/*==========================================================
  STATISTICS PAGES
==========================================================*/

//Make pages
$pageKeyTerms                     : ( name: "Key Terms", source: "glossary", isGlossary: true, sortBy: "dl > dt" );
/*
  Chapter Review page

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.review.html-baked.html

  Style guide: book.composite.review
*/
$pageChapterReview          : ( name: "Chapter Review", source: "summary", sectionSeparated: true );

/*
Formula Review page

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.formulareview.html-baked.html

  Style guide: book.composite.formulareview
*/
$pageFormulaReview          : ( name: "Formula Review", source: "formula-review", sectionSeparated: true );

/*
  Practice Problems page

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.practice.xhtml-baked.xhtml

  Style guide: book.2-composite.practice
*/
$pagePractice                   : ( name: "Practice", source: "practice", sectionSeparated: true, hasSolutions: true );
/*
  Bringing It Together: Exercises page

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.BITExercises.html-baked.html

  Style guide: book.composite.BITExercises
*/
$pageBITExercises           : ( name: "Bringing It Together: Exercises", source: "bring-together-exercises", hasSolutions: true );

/*
  Homework page

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.homework.html-baked.html

  Style guide: book.composite.homework
*/
$pageHomework              : ( name: "Homework", source: "free-response", sectionSeparated: true, hasSolutions: true );

/*
  Bringing It Together: Homework page

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.BITHomework.html-baked.html

  Style guide: book.composite.BITHomework
*/
$pageBITHomework         : ( name: "Bringing It Together: Homework", source: "bring-together-homework", hasSolutions: true );

/*
  References page

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.references.html-baked.html

  Style guide: book.composite.references
*/
$pageReferences            : ( name: "References", source: "references", sectionSeparated: true );

/*
  Solutions page

  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.solutions.html-baked.html

  Style guide: book.composite.solutions
*/
$pageSolutions                : ( name: "Solutions", source: "solutions", compoundComposite: true, );

$pageIndex                        : ( name: "Index", source: "index", isIndex: true );

$chapterCompositePages: (
  $pageKeyTerms, $pageChapterReview, $pageFormulaReview, $pagePractice, $pageBITExercises, $pageHomework, $pageBITHomework, $pageReferences, $pageSolutions
);

$bookCompositePages: (
  //This doesn't get parsed as a list without a comma at the end
  //the composite builder should account for this rather than using hacky syntax
  $pageIndex,
);

/*==========================================================
  STATISTICS TITLING CONTENT
==========================================================*/

//unfortunately a base obj cannot be created for all Content because it would make the order of the keys static
//when they need to be able to be in any order because of possible changes in titling order between books
//Usage Note: key: class of the containing span, value: text that will go inside span
$chapterTitleContent        : ( number: counter(chapter), divider: ' ' );

$appendixTitleContent       : ( title-label: "Appendix ", number: counter(appendix, upper-alpha), divider: ' ' );

$sectionTitleContent        : ( number: counter(chapter) "." counter(section), divider: ' ' );

$exerciseTitleContent       : ( divider: ".", number: counter(exercise) );

// NOTE: This is unused in this book but is copy/pasta'd just to make it easier to find when switching to a config scheme
$exerciseContentTitleContent: ( number : counter(exerciseMaybeInContent), title-label : "Exercise" );
$solutionContentTitleContent: null;


/*
  Example

  Contains a title "Example". Titles are numbered. Exercises inside aren't numbered.

  Markup: ./styleguide/page.example.html-baked.html

  Style guide: page.example
*/
$exampleTitleContent        : ( title-label: "Example ", number: counter(chapter) "." counter(example) );

$exampleSolutionTitleContent: ( title-label: "Solution ", number: counter(chapter) ". " counter(example) );
/*
  Try It note

  Contains a title "Try It" and the content of the note. Titles are numbered. Exercises inside aren't numbered.

  Markup: ./styleguide/page.note.try.html-baked.html

  Style guide: page.note.try
*/
$tryTitleContent                     : ( title-label: "Try It ", number: counter(chapter) "." counter(example) );
/*
  Using the TI-83, 83+, 84, 84+ Calculator note

  Contains a title "Using the TI-83, 83+, 84, 84+ Calculator" and the content of the note.

  Markup: ./styleguide/page.note.calculator.html-baked.html

  Style guide: page.note.calculator
*/
$calculatorNote                       : ( label : "Using the TI-83, 83+, 84, 84+ Calculator", selector : calculator, );

/*
  Note

  Contains a title "Note" and the content of the note. This note can be distinguished visually via css

  Markup: ./styleguide/page.note.finger.html-baked.html

  Style guide: page.note.finger
*/
$fingerNote                               : ( label : "Note", selector : finger, );
/*
  Stats Lab note

  Contains a title "Stats Lab" and the content of the note.

  Markup: ./styleguide/page.note.lab.html-baked.html

  Style guide: page.note.lab
*/
$statsLabNote                            : ( label : "Stats Lab", selector : lab, );

/*
  Collaborative Excerise note

  Contains a title "Collaborative Excerise" and the content of the note.

  Markup: ./styleguide/page.note.collab.xhtml-baked.xhtml

  Style guide: page.note.collab
*/

$collabNote                             : ( label : "Collaborative Excerise", selector : collab, );


$captionTableNumber         : ( title-label: "Table ", number: counter(chapter) "." counter(table) );

//TODO: Make a counter for both chapter and appendix, and automate the switch between standard and upper alpha counting?
$captionTableNumberAp       : ( title-label: "Table ", number: counter(appendix, upper-alpha) "." counter(table) );

$captionFigNumber           : ( title-label: "Figure ", number: counter(chapter) "." counter(figure) );

//TODO: Make a counter for both chapter and appendix, and automate the switch between standard and upper alpha counting?
$captionFigNumberAp         : ( title-label: "Figure ", number: counter(appendix, upper-alpha) "." counter(figure) );

$symbolsSectionTitle        : "Symbols";

/*==========================================================
  STATISTICS CONFIG
==========================================================*/

$setTableCaption            : ( type: table, defaultContainer: caption, hasCaption: false, hasTitle: true );

$setFigureCaption           : ( type: figure, defaultContainer: figcaption, hasCaption: true, hasTitle: false );

//If this method of setting the content of the label explicity becomes a problem,
//try grabbing the numbering information from the element's header

//NOTE: These selectors MUST match the counting selectors or be more specific
//otherwise, the increment and the counter() call may fire in the wrong order
//This may be fixed in a later version of easybake
$targetLabels: (
  (
    selector    : '.os-eoc [data-type="exercise"]',
    label       : "Exercise " counter(chapter) "." counter(exercise)
  ),
  (
    selector    : 'div[data-type="chapter"] .example',
    label       : "Example " counter(chapter) "." counter(example)
  ),
  (
    selector    : '[data-type="chapter"] :not(table) > table:not(.unnumbered)',
    label       : "Table " counter(chapter) "." counter(table)
  ),
  (
    selector    : '[data-type="chapter"] :not(figure) > figure:not(.unnumbered)',
    label       : "Figure " counter(chapter) "." counter(figure)
  ),
  (
    selector    : '[data-type="appendix"] :not(table) > table:not(.unnumbered)',
    label       : "Table " counter(appendix, upper-alpha) "." counter(table)
  ),
  (
    selector    : '[data-type="appendix"] :not(figure) > figure:not(.unnumbered)',
    label       : "Figure " counter(appendix, upper-alpha) "." counter(figure)
  ),
  // Book-specific link to Try It
  /*
    Try It Feature

    This is a note that is numbered based on the example before it

    Style guide: page.note.try
  */
  (
    selector    : 'div[data-type="chapter"] .try',
    label       :     "Try It"
  ),
);

/*
  Chapter Objectives

  This is a Note that appears in the Introduction page of every chapter.

  Markup: ./styleguide/page.note.chapter-objectives.xhtml-baked.xhtml

  Style guide: page.note.chapter-objectives
*/
