@import '../../mixins/_all';

//Import book config file
@import './_config';

//TODO: Improve performance by using more specific selectors in libraries when possible
//TODO: Separate object files
//TODO: Make sure mixins are "namespaced" to the file they are from
//TODO: Internationalization Solution ->
// Use maps to call strings ending in the language selected?
// $lang: "en";
// $chapter_en: "Chapter";
// $appendix_en: "Appendix";
// $chapter_de: "Kapitel";
// $appendix_de: "Anhang";
//TODO: Add warnings/flags for warnings/documentation when bundles are called in an unexpected order (dependencies for mixin calls?)

:pass(0) {

  //Some modifications to be done to the book before any collation
  @include modify_titlePreface();
  @include modify_spanWrapTitles();
  @include modify_simLinkTarget();
  @include modify_wrapExercises(); // no dependencies
  @include modify_wrapLists(); // no dependencies
  @include modify_wrapIframesWithAlternatives(); // no dependencies
  @include modify_trash('.try [data-type="solution"]');
  @include utils_hasSolution();
  @include modify_note($calculatorNote);
  @include modify_note($fingerNote);
  @include modify_note($statsLabNote);
  @include modify_note($collabNote);
  @include modify_GenericNote();
  //the metadata has been moved to the content, remove it from the metadata
  @include modify_trash('[data-type="metadata"] > [data-type="description"]');
}
:pass(2) {
  //Come up with mixins for common numbering schemes as per Phil's suggestion
  @include count_countChapters(chapter);
  @include number_numberChapters($chapterTitleContent);
  @include count_countAppendices(appendix);
  @include number_numberAppendices($appendixTitleContent);
  @include count_countSections(section);
  @include number_numberSections($sectionTitleContent);
  @include count_countExamples(example);
  @include number_numberExamples($exampleTitleContent, $exampleSolutionTitleContent);
  @include count_countNote(Try, "try");
  @include number_numberNote("try", $tryTitleContent);
  @include count_countTerms(term);
  @include reference_refPageIDStringAs(pageID);
  @include modify_prepIndexTerms(term, pageID);

  @include reference_refSectionHeaderNodeAs(sectionHeaderNode);
  @include compose_createChapterComposites($chapterCompositePages, sectionHeaderNode);
  @include modify_addUnnumbered ('.try', '[data-type="exercise"]');
  @include modify_addUnnumbered ('[data-type="example"]', '[data-type="exercise"]');
}
:pass(3) {
  //After: ???
  @include reference_refSectionHeaderNodeAs(sectionHeaderNode);
  @include reference_refSectionHeaderStringAs(sectionHeaderString);
  @include compose_prepBookComposites($bookCompositePages, sectionHeaderNode, sectionHeaderString);

  //After: createChapterComposites
  @include count_countEOCExercises(exercise, '[data-type="chapter"]');
  @include number_numberEOCExercises($exerciseTitleContent, $exerciseTitleContent);
}
:pass(4) {
  //After: createChapterComposites, numberEOCExercises
  @include count_countExercises(exerciseAll);
  @include link_linkToProblemsFromSolutionsEOC();

  //After: prepBookComposites
  @include reference_refChapterHeaderNodeAs(chapterHeaderNode);
  @include compose_prepChapterAreas($bookCompositePages, chapterHeaderNode);

}
:pass(5) {
  //Only move solutions after exercises/solutions are numbered
  @include reference_refSectionHeaderNodeAs(sectionHeaderNode);
  @include compose_createEOCSolutions($chapterCompositePages, $pageSolutions, sectionHeaderNode);

  //After: prepBookComposites, prepChapterAreas
  @include compose_createBookComposites($bookCompositePages);
}
:pass(6) {
  //After: prepIndexTerms, createBookComposites
  @include modify_addIndexSymbolGroup("index", $symbolsSectionTitle);

  //After: composite page creation
  @include count_countChapters(chapter);
  @include count_countAppendices(appendix);
  @include count_countEOCExercises(exercise, '[data-type="chapter"]');
  @include count_countExamples(example);
  @include link_setTargetLabels($targetLabels);
  @include link_setLinkLabels();

  @include reference_refBookMetadataNodeAs(bookMetadata);
  @include modify_compositeMetadata(bookMetadata);

  //After: createChapterComposites, createEOCSolutions, createBookComposites
  @include compose_titleEOCComposites($chapterCompositePages);
  @include compose_titleEOBComposites($bookCompositePages);

  //After: createChapterComposites, createEOCSolutions, createBookComposites
  @include modify_chapterAutoID();

  @include count_countExercisesInContentButNotInExample(exerciseMaybeInContent);
  // This has to run before number_numberEOCExercises because its selector is more general than the EOC selector
  @include number_numberContentExercises($exerciseContentTitleContent, null);

  @include count_countTables(table);
  @include count_countFigures(figure);
  @include number_setCaptions($setTableCaption, $captionTableNumber, $captionTableNumberAp);
  @include number_setCaptions($setFigureCaption, $captionFigNumber, $captionFigNumberAp);
  @include modify_retitleHeaders();
}
:pass(7) {
  @include modify_trash('.ox-index-link-separator:last-child');
  @include modify_retitleCompositeMetadata();
}
:pass(8) {
  //After: All metadata tasks are completed
  @include modify_suppressURI();

  @include toc_prepTOCElements();
}
:pass(9) {
  @include toc_putTOCElements();
}
:pass(10) {
  @include toc_navTOCUnwrap();
}
:pass(100) {
  @include utils_clearTrash();
}
