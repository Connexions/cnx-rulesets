// Pull in elements that are common for all books, like the link target labels.
// It is commented here to make sure all the vars used in ruleset-generation are documented in this file
// @import '../_common-stuff';

// ==========================================================
//  TITLING CONTENT
// ==========================================================
//
// These describe the labels for things like "Figure 4.3" or "Appendix B".
// They are local vars that are used below.
// NOTE: The order of each value matters; it is the order in which these
// elements will occur in the generated text.
$_exerciseTitleContent       : ( divider: ".", number: counter(exercise) );
$_exampleTitleContent        : ( title-label: "Example ", number: counter(chapter) "." counter(example) );
$_exampleSolutionTitleContent: ( title-label: "Solution ", number: counter(chapter) "." counter(example) );
$_tryTitleContent            : ( title-label: "Try It ", number: counter(chapter) "." counter(example) ); // try it notes are numbered based on the example preceeding them
$_calcTitleContent           : ( title-label: "Using the TI-83, 83+, 84, 84+ Calculator" );
$_equationNumber             : ( title-label: "Eqn", number: counter(equation) );

// The following are defined in _common-stuff.scss because they do not change
// but are here for completeness.
// TODO: Maybe they should be moved to $Config_PartType_* for consistency instead of being separate vars
$Config_ChapterTitleContent        : ( number: counter(chapter), divider: ' ' );
$Config_AppendixTitleContent       : ( title-label: "Appendix ", number: counter(appendix, upper-alpha), divider: ' ' );
$Config_SectionTitleContent        : ( number: counter(chapter) "." counter(section), divider: ' ' );
$Config_CaptionTableNumber         : ( title-label: "Table ", number: counter(chapter) "." counter(table) );
$Config_CaptionTableNumberAp       : ( title-label: "Table ", number: counter(appendix, upper-alpha) "." counter(table) );
$Config_CaptionFigNumber           : ( title-label: "Figure ", number: counter(chapter) "." counter(figure) );
$Config_CaptionFigNumberAp         : ( title-label: "Figure ", number: counter(appendix, upper-alpha) "." counter(figure) );
$SymbolsSectionTitle: "Symbols";



// ==========================================================
//  COLLATION PAGES
// ==========================================================
//
// These are the end-of-chapter/book pages that are autogenerated.
// Each entry has a couple standard fields that can be set:
// - source: the class name (and bucket) of the page (maybe rename?)
// - name: The title of the new page (maybe rename?)
// - hasSolutions: true when this item contains exercises that contain solutions
//                 (why is this necessary?)
// - sectionSeparated: true when items on this page should be organized by Section
//                     A header is added which contains the section number and title
//
// There are also a couple of "special" pages: `isGlossary:true` and `isIndex:true`
// which contain additional configuration fields.
//
// Also, a set of styleguide comments occur above for each composite page.
// Having it here makes it easy to remember to update the documentation and
// by having it above the `$Config_ChapterCompositePages` helps make this area
// more readable (since it sort of looks like a table).

/*
  Practice Problems
  These should be collated at the end of a chapter.

  Markup: ./styleguide/book.composite.practice.html-baked.html

  Style guide: book.composite.practice
*/
$Config_ChapterCompositePages: (
  (source: "glossary",        isGlossary: true, sortBy: "dl > dt",                  name: "Key Terms"),
  (source: "summary",         sectionSeparated: true,                               name: "Chapter Review"),
  (source: "formula-review",  sectionSeparated: true,                               name: "Formula Review"),
  (source: "practice",        sectionSeparated: true, hasSolutions: true,           name: "Practice"),
  (source: "bring-together-exercises",                hasSolutions: true,           name: "Bringing It Together: Exercises"),
  (source: "free-response",   sectionSeparated: true, hasSolutions: true,           name: "Homework"),
  (source: "bring-together-homework",                 hasSolutions: true,           name: "Bringing It Together: Homework"),
  (source: "references",      sectionSeparated: true,                               name: "References"),
  (source: "solutions",       compoundComposite: true, moveSolutionsTo: $AREA_EOC,  name: "Solutions"),
);

$Config_BookCompositePages: (
  (source: "index",           isIndex: true,                              name: "Index"),
);


// ==========================================================
//  CAPTION CONFIG
// ==========================================================

// Configure table and Figure captions
// If this method of setting the content of the label explicity becomes a problem,
// try grabbing the numbering information from the element's header

$Config_SetTableCaption : ( type: table,  defaultContainer: caption,    hasCaption: false, hasTitle: true );
$Config_SetFigureCaption: ( type: figure, defaultContainer: figcaption, hasCaption: true,  hasTitle: false );


// ==========================================================
//  TARGET LABELS (optional)
// ==========================================================

// Configure the labels of links. You will likely just extend the default set
// with a label for items specific to this book, like links to `Try It` notes.
// (TODO: maybe this should be the default for links to Notes?)
//
// NOTE: These selectors MUST match the counting selectors or be more specific
// otherwise, the increment and the counter() call may fire in the wrong order.
// This may be fixed in a later version of easybake

// This first item is here only for completeness. It can be found in _common-stuff.scss
$Config_TargetLabels: (
  ( selector: '.os-eoc [data-type="exercise"]',               label: "Exercise " counter(chapter) "." counter(exercise) ),
  ( selector: '[data-type="chapter"] .example',               label: "Example "  counter(chapter) "." counter(example) ),
  ( selector: '[data-type="chapter"] :not(table) > table',    label: "Table "    counter(chapter) "." counter(table) ),
  ( selector: '[data-type="chapter"] :not(figure) > figure',  label: "Figure "   counter(chapter) "." counter(figure) ),
  ( selector: '[data-type="appendix"] :not(table) > table',   label: "Table " counter(appendix, upper-alpha) "." counter(table) ),
  ( selector: '[data-type="appendix"] :not(figure) > figure', label: "Figure " counter(appendix, upper-alpha) "." counter(figure) ),
);

// This is what you would most likely write if you need to add a custom link
// TODO: Make this something like [data-type="note"] { content: target-string(attr(href), title)}
$Config_TargetLabels: append( $Config_TargetLabels,
  ( selector: '[data-type="note"].try', label: "Try It" )
);


// ==========================================================
//  CUSTOM NOTES
// ==========================================================

// These are a Set of "Feature boxes" that are specific to the book.
// Each entry has a couple standard fields that can be set:
// - className: the class name of the Note
// - moveSolutionTo: Where the solution can be moved to.
//   - $AREA_NONE keeps the solution in place
//   - $AREA_TRASH discards the solution
//   - $AREA_EOC moves the solutions to the end of a chapter
//   - $AREA_EOB moves the solutions to the end of the book
// - titleContent: what the autogenerated title should look like.
//                 Most notes are just a string but some, like "Try It"
//                 are prefaced with which section they occur in

$Config_Notes: (
  (className: 'try',        moveSolutionTo: $AREA_TRASH, titleContent: $_tryTitleContent),
  (className: 'calculator', moveSolutionTo: $AREA_NONE,  titleContent: $_calcTitleContent),
);


// ==========================================================
//  OTHER PARTS
// ==========================================================

// This contains additional elements in the book (like an equation, exercises, solutions)
// Each entry has a few common fields that can be set:
// - moveTo: specifies where to move this element to
// - resetAt: specifies when the counters should reset
//   - $RESET_CHAPTER resets for each chapter
//   - $RESET_COMPOSITE_PAGE resets for each autogenerated page
// - titleContent: The generated title for this element

$Config_PartType_Exercise: (moveTo: $AREA_EOC, resetAt: $RESET_CHAPTER,  titleContent: $_exerciseTitleContent);
$Config_PartType_Example:  (moveTo: $AREA_NONE,                          titleContent: $_exampleTitleContent,
                                                                  solutionTitleContent: $_exampleSolutionTitleContent);
$Config_PartType_Chapter:  (outlineTitle: 'Chapter Outline');
$Config_PartType_Equation: (moveTo: $AREA_NONE, resetAt: $RESET_CHAPTER, numberAt: $NUMBER_NONE, titleContent: $_equationNumber, excludeNumberingInClassName: 'section-summary');
$Config_PartType_Solution: (moveTo: $AREA_NONE);
