//***
//*** Notes are defined via two means: settings defined in the function notes-settings
//*** in theme/_notes-settings and color schemes defined in custom maps in
//*** theme/_notes-settings.
//***


//TODO: notes inside of notes

@mixin baseNoteStyle() {
  width: 100%;
  box-decoration-break: slice;
  box-sizing: border-box;
  margin-bottom: size-scale(1);

  svg text {
    fill: color-map(featureBodyText) !important; //this is necessary to override the inline svg fill
  }

  a {
    &:link {
      @include link-style(settings(note-link));
    }
  }
}

//todo: nest notes: come up with a dynamic title selector
@mixin noteTitle ($type, $titleColor) {
  $headerSize: index-header-size($type);
  font-weight: settings(note-title-weight);
  font-size: size-scale($headerSize);
  line-height: line-height($headerSize);
  color: $titleColor;
  font-weight: normal;
  display: block;
  letter-spacing: settings(note-title-letter-spacing);
  page-break-after: avoid;
  padding: settings(note-title-padding); //why, oh why isn't this padding working??
}

@mixin simpleNote($titleColor, $subtitleColor, $borderColor, $titleBGcolor, $bodyFontColor, $bgColor, $image: null) {

  @include baseNoteStyle();

  h3[data-type="title"] {
    @include noteTitle(h3, $titleColor);
    background: $titleBGcolor;
    border-top-right-radius: settings(note-top-border-radius); //todo: radius variables
    border-top-left-radius: settings(note-top-border-radius);

    @if $image {
      background: url($image) $titleBGcolor no-repeat right;
    }

  }
  .os-note-body {
    padding: settings(note-body-padding);
    background: $bgColor;
    color: $bodyFontColor;
    border: settings(note-border) $borderColor;
    h4[data-type="title"] {
      @include noteTitle(h4, $subtitleColor);
    }
  }
}

@mixin noteTopBar($titleColor, $subtitleColor, $borderColor, $topBorderColor, $bodyFontColor) {

  @include baseNoteStyle();

  border-left: settings(note-border) $borderColor;
  border-right: settings(note-border) $borderColor;
  h3[data-type="title"] {

    @include noteTitle(h3, $titleColor);

    border-top: settings(note-TopBar-border-radius) $topBorderColor;
    border-bottom:  settings(note-border) $borderColor;
    border-top-right-radius: settings(note-TopBar-border-radius);
    border-top-left-radius: settings(note-TopBar-border-radius);
    padding: settings(note-title-padding);
    //width: @note-border-top-width;
  }
  .os-note-body {
    padding: settings(note-body-padding);
    color: $bodyFontColor;
    border-bottom: settings(note-border) $borderColor;
    h4[data-type="title"] {

      @include noteTitle(h4, $subtitleColor);

    }
    p:last-child {
      padding-bottom: 0;
    }
  }
}


@mixin note($noteSettings) {
  @each $note in $noteSettings {
    $getScheme: map-get($note, color-scheme);
    $noteType: map-get($note, noteType);
    $noteName: map-get($note, name);
    $noteImage: map-get($note, image);
    $noteBodyColor: map-get($getScheme, noteBodyFontColor);
    $noteBGColor: map-get($getScheme, noteBGColor);
    $noteTitleColor: map-get($getScheme, noteTitleColor);
    $noteSubtitleColor: map-get($getScheme, noteSubtitleColor);
    $noteTitleBGColor: map-get($getScheme, noteTitleBGcolor);
    $noteTopBorderColor: map-get($getScheme, noteTopBorderColor);
    $noteBorderColor: map-get($getScheme, noteBorderColor);

    [data-type="note"] {
      &.#{$noteName} {
        @if $noteType == simpleNote {
         @include simpleNote($noteTitleColor, $noteSubtitleColor, $noteBorderColor, $noteTitleBGColor, $noteBodyColor, $noteBGColor, $noteImage);
        }
        @else if $noteType == noteTopBar {
         @include noteTopBar($noteTitleColor,$noteSubtitleColor, $noteBorderColor, $noteTopBorderColor, $noteBodyColor);
        }
      }
    }
  }
}



// @mixin baseNotesStyles() {
//
//   }
  //TODO: find an exercise in a note and style it
  // .exercise {
  //   > .title,
  //   .solution {
  //     font-size: size-scale(1);
  //   }
  // }
//}
// @mixin notes ($title-background-color, $background-color, $icon, $notes-body-text-color: color-map(featureBody1), $icon-width: 110px, $icon-height: 62px, $icon-top: 2px, $icon-right: 15px, $border-bottom-left-radius: 0, $border-bottom-right-radius: 0, $border-top-left-radius: 5px, $border-top-right-radius: 5px) {
//   @include baseNotesStyles();
//   background-color: $background-color;
//   border-bottom-left-radius: $border-bottom-left-radius;
//   border-bottom-right-radius: $border-bottom-right-radius;
//   box-sizing: border-box;
//
//   h3[data-type="title"] {
//     background-color: $title-background-color;
//     color: color-map(standard-white);
//     border-top-left-radius: $border-top-left-radius;
//     border-top-right-radius: $border-top-right-radius;
//     //.scale-padding(1, padding);
//     letter-spacing: 3px;
//     text-transform: uppercase;
//   }
//
//   .os-note-body {
//     &::before {
//       display: block;
//       content: '';
//       // background: url("../books/#{$bookName}/images/#{$icon}.svg") no-repeat 0;
//       width: $icon-width;
//       height: $icon-height;
//       position: absolute;
//       bottom: $icon-top;
//       right: $icon-right;
//     }
//   }
// }
// @mixin note-border-top($note-border-color, $border-radius: 3px, $border-top: 5px) {
//   @include baseNotesStyles();
//
//   h3[data-type="title"] {
//     border-top: $border-top solid $note-border-color;
//     border-top-right-radius: $border-radius;
//     border-top-left-radius: $border-radius;
//     border-bottom: solid 1px $note-border-color;
//     letter-spacing: 4px;
//     text-transform: uppercase;
//     //  #utils>#pb>.after(avoid);
//     //.scale-padding(2, padding);
//     //width: $note-border-top-width;
//   }
//   border-left: solid 1px $note-border-color;
//   border-right: solid 1px $note-border-color;
//   border-bottom: solid 1px $note-border-color;
//   //override base generic styles for notes
//   padding: 0;
//   margin: 0;
//   top: 10px;
//   //override generic note corners
//   border-top-right-radius: 0;
//   border-top-left-radius: 0;
//   width: 100%;
//
//   .os-note-body {
//     border: 0;
//     h4[data-type="title"] {
//       @include titles-h4-style($title-color: color-map(featureBodyText));
//     }
//   }
//
//   a:link {
//     //@mixin link-style($body-link-color);
//   }
// }
