@function image-set() {
  @return config(image-set);
}

@function image($image_name) {
  @if not rb_resource_exists("images/#{$image_set}") {
    @error "Image-set `#{$image_set}` does not exist.";
  }
  @if not rb_resource_exists("images/#{$image_set}/#{$image_name}") {
    @error "Image `#{$image_name}` does not exist.";
  }
  @return "url(../images/#{$image_set}/#{$image_name})";
}

// Select the path to the resources (theme or book level)
@function selectPath($pathLevel) {
  @if $pathLevel == book {
    // $pathLevel: $BOOK_IMAGES_PATH; Not sure what this should be
    $pathLevel: "../images/"
  }
  @else if $pathLevel == theme {
    // $pathLevel: $THEME_IMAGES_PATH; Not sure what this should be
    $pathLevel: "../images/"
  }
  @else {
    @error "There are no images located at #{$pathLevel}, choose between theme or book";
  }
  @return $pathLevel;
}

//combine path and resource type to output full resource path
@function resource($path, $imageName, $type) {
  $pathImageName: "";
  $path: selectPath($path);
  @if $type == svg {
    $pathImageName:#{$path}/#{$imageName}#{'.'}svg;
  }
  @else if $type == png {
    $pathImageName:#{$path}/#{$imageName}#{'.'}png;
  }
  @else if $type == jpg {
    $pathImageName:#{$path}/#{$imageName}#{'.'}jpg;
  }
  @else {
    @error "#{$type} is not a proper image type (svg, png, jpg)";
  }
  @return $pathImageName;
}


@function nested-map-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map
}
