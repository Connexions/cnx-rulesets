#!/bin/bash
BOOTSTRAP_ALREADY_RAN=1
cd "$(dirname "$0")/.." || exit 111
source ./script/bootstrap || exit 111

# This converts the math in the HTML to svg (by default, can be set using MATH_FORMAT)

set -e

book_name=$1

# Check command line args
if [ -z "${book_name}" ]; then
  _say 'ERROR: Argument missing.  You must specify the name of the book as the 1st argument (or --all).  For example: physics'
  die 'Stopping because no commandline args were passed in'
fi

# Pull in the BOOK_CONFIGS
source ./books.txt || exit 1

if [ "${book_name}" != "--all" ]; then
  found_config=false
  # Filter BOOK_CONFIGS to only contain the book you want to mathify
  for book_config in "${BOOK_CONFIGS[@]}"; do
    read -r book_config_name _ <<< "${book_config}"

    if [[ "${book_name}" == "${book_config_name}" ]]; then
      BOOK_CONFIGS=("${book_config_name}")
      found_config=true
      break
    fi
  done

  if ! ${found_config}; then
    _say "Valid books are (from ./books.txt):"
    for book_config in "${BOOK_CONFIGS[@]}"; do
      read -r book_name _ <<< "${book_config}"
      _say "${book_name}"
    done
    die "Could not find book info for book named ${book_name}"
  fi
fi

for book_config in "${BOOK_CONFIGS[@]}"; do
  read -r book_config_name _ <<< "${book_config}"

  book_dir="./data/${book_config_name}"
  baked_file="${book_dir}/collection.baked.xhtml"
  mathified_file="${book_dir}/collection.mathified.xhtml"
  math_format=${MATH_FORMAT:-svg}

  if [[ -z "$(command -v neb)" ]]; then
    do_progress_quiet "Activating Python virtualenv" \
      source "${virtualenv_dir}/bin/activate"
  fi

  do_progress_quiet "Converting math in ${baked_file} to ${math_format}" \
    docker-compose run --rm mathify /bin/bash -c "node typeset/start -i \"${baked_file/.\/data/\/out}\" -o \"${mathified_file/.\/data/\/out}\" -f \"${math_format}\" && cp -r node_modules/mathjax \"${book_dir/.\/data/\/out}\" && chmod a+w \"${mathified_file/.\/data/\/out}\""

  _say "Output is available at ${mathified_file}"
done
