#!/bin/bash

if [ -f /.dockerenv ]; then
  if [ "${1:0:1}" == "/" ]; then
    exec "$@"
    exit
  fi
fi

cd "$(dirname "$0")/.." || exit 111
source ./script/bootstrap || exit 111

book_name=$1

# Pull in the BOOK_CONFIGS
source ./books.txt || exit 1

if [ ! "${book_name}" == "--all" ]; then
  # Filter BOOK_CONFIGS to only contain the book you want to fetch
  for book_config in "${BOOK_CONFIGS[@]}"; do
    read -r book_config_name _ <<< "${book_config}"

    if [[ "${book_name}" == "${book_config_name}" ]]; then
      BOOK_CONFIGS=("${book_config}")
      found_config=1
      break
    fi
  done

  if [[ ! 1 -eq "${found_config}" ]]; then
    _say "Valid books are (from ./books.txt):"
    for book_config in "${BOOK_CONFIGS[@]}"; do
      read -r book_config_name _ <<< "${book_config}"
      _say "${book_config_name}"
    done
    die "Could not find Book info for book named ${book_name}"
  fi
fi

for book_config in "${BOOK_CONFIGS[@]}"; do
  read -r book_name _ _ _ _ _ style_name <<< "${book_config}"

  book_dir="${OUTPUT_DIR:-./data}/${book_name}"
  mathified_file="${book_dir}/collection.mathified.xhtml"
  baked_file="${book_dir}/collection.baked.xhtml"
  style_file="${STYLE:-./styles/output/${style_name}-pdf.css}"
  output_file="${book_dir}/collection.pdf"

  if [ -f "${mathified_file}" ]; then
    input_file="${mathified_file}"
  else
    input_file="${baked_file}"
  fi

  style_flag=()
  if [ -f "${style_file}" ]; then
    style_flag=('--style' "${book_dir}/$(basename "${style_file}")")
    cp "${style_file}" "./data/${book_name}"
  elif [ -n "${STYLE}" ] || [ -n "${style_name}" ]; then
    _say "${c_red}WARNING${c_none} style not found: ${style_file}"
  else
    _say "${c_red}WARNING${c_none} style name missing in books.txt"
  fi

  # Run princexml as root to bypass permission issues:
  # The data directory belongs to root, the default user on the princexml image
  # is "princess" who doesn't have permission to write the output directory.
  # The simplest way is to run princexml as root.
  do_progress "Generating pdf using princexml" \
    docker-compose run --rm -u root pdf prince -v --output="${output_file}" "${style_flag[@]}" "${input_file}"

  docker-compose run --rm -u root pdf chown -R "$(stat -c '%u:%g' ./data)" "${book_dir}"

  _say "Output in ${output_file/$OUTPUT_DIR/$HOST_PWD\/data}"
done
