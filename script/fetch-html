#!/bin/bash
cd "$(dirname "$0")/.." || exit 111
source ./script/bootstrap || exit 111

# This fetches the raw HTML for a book (or all books if using the --all argument) from ${host_name}

set -e

arg1=$1


# Pull in the BOOK_CONFIGS
source ./books.txt || exit 1


# Check command line args

if [[ ! "${arg1}" ]]; then
  _say "Valid books are (from ./books.txt):"
  for book_config in "${BOOK_CONFIGS[@]}"; do
    read -r book_name recipe_name uuid _ <<< "${book_config}"
    _say "${book_name}"
  done
  die 'Argument Missing. You must specify the name of the book as the 1st argument or --all for all books. For example: physics'
fi

if [[ ! "${arg1}" == "--all" ]]; then
  # Filter BOOK_CONFIGS to only contain the book you want to fetch
  for book_config in "${BOOK_CONFIGS[@]}"; do
    read -r book_config_name recipe_name uuid host_name _ <<< "${book_config}"

    if [[ "${arg1}" = "${book_config_name}" ]]; then
      BOOK_CONFIGS=("${book_config_name} ${recipe_name} ${uuid} ${host_name} ${_}")
      host_name=${HOST:-${host_name}}

      found_config=1
      break
    fi
  done

  if [[ ! 1 -eq "${found_config}" ]]; then
    _say "Valid books are (from ./books.txt):"
    for book_config in "${BOOK_CONFIGS[@]}"; do
      read -r book_name recipe_name uuid _ <<< "${book_config}"
      _say "${book_name}"
    done
    die "Could not find Book info for book named ${arg1}"
  fi
fi

for book_config in "${BOOK_CONFIGS[@]}"; do
  read -r book_name recipe_name uuid host_name _ <<< "${book_config}"
  # Allow user to override the hostname
  host_name=${HOST:-${host_name}}

  raw_file="./data/${book_name}-raw.xhtml"

  # These are expanded on the remote machine, hence single-quotes
  # shellcheck disable=SC2016
  tempEpubFile='${HOME}/temp.internal.epub'
  # shellcheck disable=SC2016
  tempHtmlFile='${HOME}/temp.xhtml'

  rmTempEpubCmd="[ -e ${tempEpubFile} ] && rm ${tempEpubFile}"
  rmTempHtmlCmd="[ -e ${tempHtmlFile} ] && rm ${tempHtmlFile}"
  generateEpubCmd="/var/cnx/venvs/publishing/bin/cnx-archive-export_epub /etc/cnx/publishing/app.ini ${uuid} ${tempEpubFile}"
  generateHtmlCmd="/var/cnx/venvs/publishing/bin/cnx-epub-single_html --exercise_host exercises.openstax.org --mathmlcloud_url http://mathmlcloud.cnx.org:1337/equation/ ${tempEpubFile} > ${tempHtmlFile}"

  commands="${rmTempEpubCmd}; ${rmTempHtmlCmd}; ${generateEpubCmd} && ${generateHtmlCmd}"

  do_progress_quiet "Fetching ${book_name} from ${host_name} (~20 minutes if it has exercises)" \
    ssh "${USER}@${host_name}" "${commands}"

  do_progress_quiet "Copying HTML file from server to local machine" \
    scp "${USER}@${host_name}:${tempHtmlFile}" "${raw_file}"

  _say "${c_green}Fetch is Done.${c_none} File is available at ${raw_file}"

done
